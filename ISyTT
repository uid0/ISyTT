#!/bin/sh

show_help() {
    cat <<EOF
Usage: ISyTT [options]
Options:
   (None) (seriously -- there are no options...yet)

EOF
}


# Parse command line options
while true; do
    case "$1" in
      -h|--help|-\?) show_help; exit 0;;
      --) shift; break;;
      -*) echo "invalid option: $1" 1>&2; show_help; exit 1;;
      *)  break;;
    esac
done


# Make sure we have some API keys, otherwise we can't do much

monitor() {
    # Monitor the process and restart it if it dies

    trap shutdown INT TERM
    while true; do
        start_time=$(date +%s)
        # start the command
        $* &
        serverd_pid=$!

        if wait $serverd_pid; then
            # Clean shutdown
            exit 0
        fi

        # Abnormal exit

        end_time=$(date +%s)
        runtime=$(($end_time - $start_time))
        if [ "$runtime" -lt 10 ]; then
            echo "server was only running for $runtime seconds, not respawning" >&2
            exit 1
        fi

        wait=5
        echo "server exited unexpectedly, respawning in $wait seconds..." >&2
        sleep $wait
    done
}

shutdown() {
    kill -TERM $serverd_pid
    wait $serverd_pid
    status=$?
    echo "server exited with status $status"
    exit $status
}

# Extra paths to search for files : separated
export NODE_PATH=lib

# Start the server
case "$server_mode" in
    production)
        # Tell node to run in production mode
        NODE_ENV=production
        export NODE_ENV
        monitor node server.js "$@"
        ;;
    development|*)
        # Just run it
        exec node server.js "$@"
        ;;
esac

exit 1
